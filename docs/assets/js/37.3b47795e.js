(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{429:function(t,s,e){"use strict";e.r(s);var a=e(33),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"listen-for-tasks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listen-for-tasks"}},[t._v("#")]),t._v(" Listen for Tasks")]),t._v(" "),e("h2",{attrs:{id:"why-listen-for-tasks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why-listen-for-tasks"}},[t._v("#")]),t._v(" Why listen for tasks?")]),t._v(" "),e("p",[t._v("Services need to receive a command from the Engine in order to execute any desired task. Every time a command is received, it will ensure that the sender is the Engine, then it will check if it can handle the command, and if so, it will execute it. Once executed, it will reply to the Engine with the result of the command.")]),t._v(" "),e("h2",{attrs:{id:"steps-to-follow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#steps-to-follow"}},[t._v("#")]),t._v(" Steps to follow")]),t._v(" "),e("p",[t._v("To implement tasks in your Service, you'll need to :")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#task-definitions"}},[t._v("Add the task definition")]),t._v(" in the Service's "),e("RouterLink",{attrs:{to:"/guide/service/service-file.html"}},[e("code",[t._v("mesg.yml")])]),t._v(" file")],1),t._v(" "),e("li",[e("a",{attrs:{href:"#handle-executions"}},[t._v("Handle execution")]),t._v(" from the Engine")])]),t._v(" "),e("h2",{attrs:{id:"task-definitions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#task-definitions"}},[t._v("#")]),t._v(" Task definitions")]),t._v(" "),e("p",[t._v("The first step is to declare the tasks that the service will be able to execute in the service's "),e("RouterLink",{attrs:{to:"/guide/service/service-file.html"}},[e("code",[t._v("mesg.yml")])]),t._v(" file. The events should be indexed by their ID and should describe the following attributes :")],1),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("Attribute")])]),t._v(" "),e("th",[e("strong",[t._v("Type")])]),t._v(" "),e("th",[e("strong",[t._v("Default")])]),t._v(" "),e("th",[e("strong",[t._v("Description")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[t._v("name")])]),t._v(" "),e("td",[e("span",{staticClass:"type"},[t._v("String")])]),t._v(" "),e("td",[e("code",[t._v("id")])]),t._v(" "),e("td",[t._v("If the name of the task is not set, the name will be the ID of the task.")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("description")])]),t._v(" "),e("td",[e("span",{staticClass:"type"},[t._v("String")])]),t._v(" "),e("td",[e("code",[t._v('""')])]),t._v(" "),e("td",[t._v("Description of the task: what the task is doing and why it is useful.")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("inputs")])]),t._v(" "),e("td",[e("span",{staticClass:"type"},[t._v("map<id,"),e("RouterLink",{attrs:{to:"/guide/service/listen-for-tasks.html#parameter"}},[t._v("Parameter")]),t._v(">")],1)]),t._v(" "),e("td",[e("code",[t._v("{}")])]),t._v(" "),e("td",[t._v("Map of inputs that the task needs in order to be executed.")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("outputs")])]),t._v(" "),e("td",[e("span",{staticClass:"type"},[t._v("map<id,"),e("RouterLink",{attrs:{to:"/guide/service/listen-for-tasks.html#parameter"}},[t._v("Outputs")]),t._v(">")],1)]),t._v(" "),e("td",[e("code",[t._v("{}")])]),t._v(" "),e("td",[t._v("Map of outputs that the task returns.")])])])]),t._v(" "),e("h3",{attrs:{id:"parameter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parameter"}},[t._v("#")]),t._v(" Parameter")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("Attribute")])]),t._v(" "),e("th",[e("strong",[t._v("Type")])]),t._v(" "),e("th",[e("strong",[t._v("Default")])]),t._v(" "),e("th",[e("strong",[t._v("Description")])])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("strong",[t._v("name")])]),t._v(" "),e("td",[e("span",{staticClass:"type"},[t._v("String")])]),t._v(" "),e("td",[e("code",[t._v("id")])]),t._v(" "),e("td",[t._v("Name or the parameter. The default is the ID.")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("description")])]),t._v(" "),e("td",[e("span",{staticClass:"type"},[t._v("String")])]),t._v(" "),e("td",[e("code",[t._v('""')])]),t._v(" "),e("td",[t._v("Description of the parameter.")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("type")])]),t._v(" "),e("td",[e("span",{staticClass:"type"},[e("RouterLink",{attrs:{to:"/guide/service/listen-for-tasks.html#type-of-parameter"}},[t._v("Type")])],1)]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("Type of the parameter.")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("object")])]),t._v(" "),e("td",[e("span",{staticClass:"type"},[e("RouterLink",{attrs:{to:"/guide/service/listen-for-tasks.html#parameter"}},[t._v("Parameter")])],1)]),t._v(" "),e("td",[e("code",[t._v("{}")])]),t._v(" "),e("td",[t._v("Nested parameters. Parameters can contain child parameters. It can only be defined when "),e("code",[t._v("type")]),t._v(" is "),e("code",[t._v("Object")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("optional")])]),t._v(" "),e("td",[e("span",{staticClass:"type"},[t._v("Boolean")])]),t._v(" "),e("td",[e("code",[t._v("false")])]),t._v(" "),e("td",[t._v("If true, this parameter is considered as optional and might remain empty.")])]),t._v(" "),e("tr",[e("td",[e("strong",[t._v("repeated")])]),t._v(" "),e("td",[e("span",{staticClass:"type"},[t._v("Boolean")])]),t._v(" "),e("td",[e("code",[t._v("false")])]),t._v(" "),e("td",[t._v("Define this parameter as an array of the type selected")])])])]),t._v(" "),e("h3",{attrs:{id:"type-of-parameter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-of-parameter"}},[t._v("#")]),t._v(" Type of parameter")]),t._v(" "),e("p",[t._v("The parameter can be one of the following:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("String")])]),t._v(" "),e("li",[e("code",[t._v("Boolean")])]),t._v(" "),e("li",[e("code",[t._v("Number")])]),t._v(" "),e("li",[e("code",[t._v("Object")])]),t._v(" "),e("li",[e("code",[t._v("Any")])])]),t._v(" "),e("h3",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("p",[t._v("Example of a task definition in a "),e("RouterLink",{attrs:{to:"/guide/service/service-file.html"}},[e("code",[t._v("mesg.yml")])]),t._v(" file :")],1),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("taskX")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Task X"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is the task X"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputX")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Input x"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Input x is a string"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("optional")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputY")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Input y"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Input y is an optional array of boolean"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Boolean\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("optional")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repeated")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("outputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("foo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Output foo"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Description about output foo"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" String\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bar")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Output bar"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Description about output bar"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Boolean\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])]),e("h2",{attrs:{id:"handle-executions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#handle-executions"}},[t._v("#")]),t._v(" Handle executions")]),t._v(" "),e("p",[t._v("The service have to call mesg.listenTask to start listening for task to execute by passing an object containing the tasks' key and function.")]),t._v(" "),e("p",[t._v("The task functions accept inputs as parameter and returns the outputs as object or Promise of object. The task function can throw an Error in case of error. The lib will catch it and send it to the MESG Engine.")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Service "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@mesg/service'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mesg "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Service")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmesg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("listenTask")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("taskX")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("inputs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Function of the task 1")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Can directly throw error")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inputX "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'inputX is undefined'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return an object")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" response "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      foo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" response"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      bar"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" inputs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[e("a",{attrs:{href:"https://github.com/mesg-foundation/js-sdk/blob/master/packages/service/README.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("See the @mesg/service library for additional documentation"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("API definition")]),t._v(" "),e("p",[t._v("To see the API definition, check the "),e("RouterLink",{attrs:{to:"/api/execution.html"}},[t._v("Execution API definition")]),t._v(".")],1)]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Get Help")]),t._v(" "),e("p",[t._v("You need help ? Check out the "),e("a",{attrs:{href:"https://forum.mesg.com",target:"_blank"}},[t._v("MESG Forum")]),t._v(".")])])])}),[],!1,null,null,null);s.default=n.exports}}]);