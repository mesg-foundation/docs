(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{420:function(t,s,a){"use strict";a.r(s);var e=a(33),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"process-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-file"}},[t._v("#")]),t._v(" Process file")]),t._v(" "),a("p",[t._v("A process file is a YAML definition that describes the connections between events and tasks of services with a step-by-step system.")]),t._v(" "),a("p",[t._v("It is structured in the following way:")]),t._v(" "),a("param-table",{attrs:{parameter:{fields:[{name:"name",description:"Name of the process.",fullType:"string"},{name:"steps",label:"repeated",description:"Steps to execute.",fullType:"Step"}]},types:{}}}),t._v(" "),a("h2",{attrs:{id:"steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#steps"}},[t._v("#")]),t._v(" Steps")]),t._v(" "),a("p",[t._v("A process has a list of steps.\nEach step indicates a specific action to do.\nThere is currently three types of steps:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"./steps/trigger"}},[t._v("Trigger")]),t._v(": an event or a task's result that will trigger the process.\n"),a("ul",[a("li",[t._v("Should be the first step of the process.")]),t._v(" "),a("li",[t._v("Only one trigger is possible per process.")]),t._v(" "),a("li",[t._v("It triggers the process when a matching event or a task's result is emitted.")])])]),t._v(" "),a("li",[a("a",{attrs:{href:"./steps/task"}},[t._v("Task")]),t._v(": defines the task to execute of a given instance of a service.\n"),a("ul",[a("li",[t._v("A process should have at least one task and can have as many as you want.")])])]),t._v(" "),a("li",[a("a",{attrs:{href:"./steps/filter"}},[t._v("Filter")]),t._v(": stop the execution of the process if a condition doesn't match.\n"),a("ul",[a("li",[t._v("A process can have as many filters as you want.")]),t._v(" "),a("li",[t._v("Filters are optional.")])])])]),t._v(" "),a("nav",{staticClass:"cards"},[a("a",{attrs:{href:"./steps/trigger"}},[a("img",{staticClass:"icon-card",attrs:{src:"/trigger.svg"}}),t._v(" "),a("h4",[t._v("Trigger")]),t._v(" "),a("p",[t._v("React to an event or a task's result")])]),t._v(" "),a("a",{attrs:{href:"./steps/task"}},[a("img",{staticClass:"icon-card",attrs:{src:"/task.svg"}}),t._v(" "),a("h4",[t._v("Task")]),t._v(" "),a("p",[t._v("Execute a service's task")])]),t._v(" "),a("a",{attrs:{href:"./steps/filter"}},[a("img",{staticClass:"icon-card",attrs:{src:"/filter.svg"}}),t._v(" "),a("h4",[t._v("Filter")]),t._v(" "),a("p",[t._v("Add condition on data")])])]),t._v(" "),a("h2",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("p",[t._v("Here is an example of typical process.")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" erc20"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("notification\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" trigger\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/mesg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("foundation/service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ethereum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("erc20\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" PROVIDER_ENDPOINT=$(env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("PROVIDER_ENDPOINT)\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("eventKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transfer\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" task\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instanceHash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"H74Qqq8nT5JZ9GSJmuSWLN5benWZPkUb5pYcvQLsoZX"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("taskKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" taskY\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Input1 to the task"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputB")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stepKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" taskX\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" taskZ\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" filter\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("conditions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("contractAddress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x420167d87d35c3a249b32ef6225872fbd9ab85d2"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" task\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./convert\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("taskKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" email\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" task\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/mesg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("foundation/service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sendgrid\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" SENDGRID_API_KEY=$(env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("SENDGRID_API_KEY)\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("taskKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" send")])])]),a("h2",{attrs:{id:"environmental-variable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#environmental-variable"}},[t._v("#")]),t._v(" Environmental variable")]),t._v(" "),a("p",[t._v("You can override any value in the process file during the compilation by using the following syntax:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$(env:XXXX)\n")])])]),a("p",[t._v("Where "),a("code",[t._v("XXXX")]),t._v(" is the name of the variable that you can override while running the compile command with the flag "),a("code",[t._v("--env XXXX=value")]),t._v(".")])],1)}),[],!1,null,null,null);s.default=n.exports}}]);