(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{405:function(e,t,n){"use strict";n.r(t);var s=n(33),i=Object(s.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"execution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#execution"}},[this._v("#")]),this._v(" execution")]),this._v(" "),t("api-doc",{attrs:{apifiles:{files:[{name:"protobuf/api/execution.proto",description:"",package:"mesg.api",hasEnums:!1,hasExtensions:!1,hasMessages:!0,hasServices:!0,enums:[],extensions:[],messages:[{name:"CreateExecutionRequest",longName:"CreateExecutionRequest",fullName:"mesg.api.CreateExecutionRequest",description:"CreateExecutionRequest defines request to create a single execution.",hasExtensions:!1,hasFields:!0,extensions:[],fields:[{name:"taskKey",description:"taskKey to filter executions.",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,defaultValue:""},{name:"inputs",description:"",label:"",type:"Struct",longType:"mesg.protobuf.Struct",fullType:"mesg.protobuf.Struct",ismap:!1,defaultValue:""},{name:"tags",description:"tags the execution.",label:"repeated",type:"string",longType:"string",fullType:"string",ismap:!1,defaultValue:""},{name:"parentHash",description:"",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""},{name:"eventHash",description:"",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""},{name:"processHash",description:"",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""},{name:"nodeKey",description:"",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,defaultValue:""},{name:"executorHash",description:"",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""}]},{name:"CreateExecutionResponse",longName:"CreateExecutionResponse",fullName:"mesg.api.CreateExecutionResponse",description:"CreateExecutionResponse defines response for execution creation.",hasExtensions:!1,hasFields:!0,extensions:[],fields:[{name:"hash",description:"Execution&rsquo;s hash.",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""}]},{name:"GetExecutionRequest",longName:"GetExecutionRequest",fullName:"mesg.api.GetExecutionRequest",description:"GetExecutionRequest defines request to retrieve a single execution.",hasExtensions:!1,hasFields:!0,extensions:[],fields:[{name:"hash",description:"Execution&rsquo;s hash to fetch.",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""}]},{name:"ListExecutionRequest",longName:"ListExecutionRequest",fullName:"mesg.api.ListExecutionRequest",description:"The request&rsquo;s data for the `List` API.",hasExtensions:!1,hasFields:!1,extensions:[],fields:[]},{name:"ListExecutionResponse",longName:"ListExecutionResponse",fullName:"mesg.api.ListExecutionResponse",description:"The response&rsquo;s data for the `List` API.",hasExtensions:!1,hasFields:!0,extensions:[],fields:[{name:"executions",description:"List of executions that match the request&rsquo;s filters.",label:"repeated",type:"Execution",longType:"mesg.types.Execution",fullType:"mesg.types.Execution",ismap:!1,defaultValue:""}]},{name:"StreamExecutionRequest",longName:"StreamExecutionRequest",fullName:"mesg.api.StreamExecutionRequest",description:"StreamExecutionRequest defines request to retrieve a stream of executions.",hasExtensions:!1,hasFields:!0,extensions:[],fields:[{name:"filter",description:"Filter used to filter a stream of executions.",label:"",type:"Filter",longType:"StreamExecutionRequest.Filter",fullType:"mesg.api.StreamExecutionRequest.Filter",ismap:!1,defaultValue:""}]},{name:"Filter",longName:"StreamExecutionRequest.Filter",fullName:"mesg.api.StreamExecutionRequest.Filter",description:"Filter contains filtering criteria.",hasExtensions:!1,hasFields:!0,extensions:[],fields:[{name:"statuses",description:"Statuses to filter executions. One status needs to be present in the execution.",label:"repeated",type:"Status",longType:"mesg.types.Status",fullType:"mesg.types.Status",ismap:!1,defaultValue:""},{name:"instanceHash",description:"Instance&rsquo;s hash to filter executions.",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""},{name:"taskKey",description:"taskKey to filter executions.",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,defaultValue:""},{name:"tags",description:"tags to filter executions. All tags needs to be present in the execution.",label:"repeated",type:"string",longType:"string",fullType:"string",ismap:!1,defaultValue:""},{name:"executorHash",description:"Executor&rsquo;s hash to filter executions.",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""}]},{name:"UpdateExecutionRequest",longName:"UpdateExecutionRequest",fullName:"mesg.api.UpdateExecutionRequest",description:"UpdateExecutionRequest defines request for execution update.",hasExtensions:!1,hasFields:!0,extensions:[],fields:[{name:"hash",description:"Hash represents execution.",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""},{name:"outputs",description:"outputs is a success result.",label:"",type:"Struct",longType:"mesg.protobuf.Struct",fullType:"mesg.protobuf.Struct",ismap:!1,defaultValue:""},{name:"error",description:"error is an error result.",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,defaultValue:""}]},{name:"UpdateExecutionResponse",longName:"UpdateExecutionResponse",fullName:"mesg.api.UpdateExecutionResponse",description:"UpdateExecutionResponse defines response for execution update.",hasExtensions:!1,hasFields:!1,extensions:[],fields:[]}],services:[{name:"Execution",longName:"Execution",fullName:"mesg.api.Execution",description:"",methods:[{name:"Create",description:"Create creates a single Execution specified in a request.",requestType:"CreateExecutionRequest",requestLongType:"CreateExecutionRequest",requestFullType:"mesg.api.CreateExecutionRequest",requestStreaming:!1,responseType:"CreateExecutionResponse",responseLongType:"CreateExecutionResponse",responseFullType:"mesg.api.CreateExecutionResponse",responseStreaming:!1},{name:"Get",description:"Get returns a single Execution specified in a request.",requestType:"GetExecutionRequest",requestLongType:"GetExecutionRequest",requestFullType:"mesg.api.GetExecutionRequest",requestStreaming:!1,responseType:"Execution",responseLongType:".mesg.types.Execution",responseFullType:"mesg.types.Execution",responseStreaming:!1},{name:"List",description:"List returns all Executions matching the criteria of the request.",requestType:"ListExecutionRequest",requestLongType:"ListExecutionRequest",requestFullType:"mesg.api.ListExecutionRequest",requestStreaming:!1,responseType:"ListExecutionResponse",responseLongType:"ListExecutionResponse",responseFullType:"mesg.api.ListExecutionResponse",responseStreaming:!1},{name:"Stream",description:"Stream returns a stream of executions that satisfy criteria\nspecified in a request.",requestType:"StreamExecutionRequest",requestLongType:"StreamExecutionRequest",requestFullType:"mesg.api.StreamExecutionRequest",requestStreaming:!1,responseType:"Execution",responseLongType:".mesg.types.Execution",responseFullType:"mesg.types.Execution",responseStreaming:!0},{name:"Update",description:"Update updates execution with outputs or an error.",requestType:"UpdateExecutionRequest",requestLongType:"UpdateExecutionRequest",requestFullType:"mesg.api.UpdateExecutionRequest",requestStreaming:!1,responseType:"UpdateExecutionResponse",responseLongType:"UpdateExecutionResponse",responseFullType:"mesg.api.UpdateExecutionResponse",responseStreaming:!1}]}]}],scalarValueTypes:[{protoType:"double",notes:"",cppType:"double",csType:"double",goType:"float64",javaType:"double",phpType:"float",pythonType:"float",rubyType:"Float"},{protoType:"float",notes:"",cppType:"float",csType:"float",goType:"float32",javaType:"float",phpType:"float",pythonType:"float",rubyType:"Float"},{protoType:"int32",notes:"Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",cppType:"int32",csType:"int",goType:"int32",javaType:"int",phpType:"integer",pythonType:"int",rubyType:"Bignum or Fixnum (as required)"},{protoType:"int64",notes:"Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",cppType:"int64",csType:"long",goType:"int64",javaType:"long",phpType:"integer/string",pythonType:"int/long",rubyType:"Bignum"},{protoType:"uint32",notes:"Uses variable-length encoding.",cppType:"uint32",csType:"uint",goType:"uint32",javaType:"int",phpType:"integer",pythonType:"int/long",rubyType:"Bignum or Fixnum (as required)"},{protoType:"uint64",notes:"Uses variable-length encoding.",cppType:"uint64",csType:"ulong",goType:"uint64",javaType:"long",phpType:"integer/string",pythonType:"int/long",rubyType:"Bignum or Fixnum (as required)"},{protoType:"sint32",notes:"Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",cppType:"int32",csType:"int",goType:"int32",javaType:"int",phpType:"integer",pythonType:"int",rubyType:"Bignum or Fixnum (as required)"},{protoType:"sint64",notes:"Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",cppType:"int64",csType:"long",goType:"int64",javaType:"long",phpType:"integer/string",pythonType:"int/long",rubyType:"Bignum"},{protoType:"fixed32",notes:"Always four bytes. More efficient than uint32 if values are often greater than 2^28.",cppType:"uint32",csType:"uint",goType:"uint32",javaType:"int",phpType:"integer",pythonType:"int",rubyType:"Bignum or Fixnum (as required)"},{protoType:"fixed64",notes:"Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",cppType:"uint64",csType:"ulong",goType:"uint64",javaType:"long",phpType:"integer/string",pythonType:"int/long",rubyType:"Bignum"},{protoType:"sfixed32",notes:"Always four bytes.",cppType:"int32",csType:"int",goType:"int32",javaType:"int",phpType:"integer",pythonType:"int",rubyType:"Bignum or Fixnum (as required)"},{protoType:"sfixed64",notes:"Always eight bytes.",cppType:"int64",csType:"long",goType:"int64",javaType:"long",phpType:"integer/string",pythonType:"int/long",rubyType:"Bignum"},{protoType:"bool",notes:"",cppType:"bool",csType:"bool",goType:"bool",javaType:"boolean",phpType:"boolean",pythonType:"boolean",rubyType:"TrueClass/FalseClass"},{protoType:"string",notes:"A string must always contain UTF-8 encoded or 7-bit ASCII text.",cppType:"string",csType:"string",goType:"string",javaType:"String",phpType:"string",pythonType:"str/unicode",rubyType:"String (UTF-8)"},{protoType:"bytes",notes:"May contain any arbitrary sequence of bytes.",cppType:"string",csType:"ByteString",goType:"[]byte",javaType:"ByteString",phpType:"string",pythonType:"str",rubyType:"String (ASCII-8BIT)"}]},typefiles:{files:[{name:"protobuf/types/execution.proto",description:"",package:"mesg.types",hasEnums:!0,hasExtensions:!1,hasMessages:!0,hasServices:!1,enums:[{name:"Status",longName:"Status",fullName:"mesg.types.Status",description:"Status represents the status of a single execution.\nNote that a valid execution must have only one status\nflag at time.",values:[{name:"Unknown",number:"0",description:"Unknown status represents any status unknown to execution."},{name:"Created",number:"1",description:"Created is an initial status after execution creation."},{name:"InProgress",number:"2",description:"InProgress informs that processing of execution has been started."},{name:"Completed",number:"3",description:"Completed is a success status after execution was processed."},{name:"Failed",number:"4",description:"Failed is an error status after execution was processed."}]}],extensions:[],messages:[{name:"Execution",longName:"Execution",fullName:"mesg.types.Execution",description:"Execution represents a single execution run in engine.",hasExtensions:!1,hasFields:!0,extensions:[],fields:[{name:"hash",description:"Hash is a unique hash to identify execution.",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""},{name:"parentHash",description:"parentHash is the unique hash of parent execution.\nif execution is triggered by another one,\ndependency execution considered as the parent.",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""},{name:"eventHash",description:"eventHash is unique event hash.",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""},{name:"status",description:"Status is the current status of execution.",label:"",type:"Status",longType:"Status",fullType:"mesg.types.Status",ismap:!1,defaultValue:""},{name:"instanceHash",description:"instanceHash is hash of the instance that can proceed an execution",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""},{name:"taskKey",description:"taskKey is the key of the task of this execution.",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,defaultValue:""},{name:"inputs",description:"inputs data of the execution.",label:"",type:"Struct",longType:"mesg.protobuf.Struct",fullType:"mesg.protobuf.Struct",ismap:!1,defaultValue:""},{name:"outputs",description:"outputs are the returned data of successful execution.",label:"",type:"Struct",longType:"mesg.protobuf.Struct",fullType:"mesg.protobuf.Struct",ismap:!1,defaultValue:""},{name:"error",description:"error message of a failed execution.",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,defaultValue:""},{name:"tags",description:"tags are optionally associated with execution by the user.",label:"repeated",type:"string",longType:"string",fullType:"string",ismap:!1,defaultValue:""},{name:"processHash",description:"processHash is the unique hash of the process associated to this execution.",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""},{name:"nodeKey",description:"node key of the process.",label:"",type:"string",longType:"string",fullType:"string",ismap:!1,defaultValue:""},{name:"executorHash",description:"runner that should execute this execution.",label:"",type:"bytes",longType:"bytes",fullType:"bytes",ismap:!1,defaultValue:""}]}],services:[]}],scalarValueTypes:[{protoType:"double",notes:"",cppType:"double",csType:"double",goType:"float64",javaType:"double",phpType:"float",pythonType:"float",rubyType:"Float"},{protoType:"float",notes:"",cppType:"float",csType:"float",goType:"float32",javaType:"float",phpType:"float",pythonType:"float",rubyType:"Float"},{protoType:"int32",notes:"Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",cppType:"int32",csType:"int",goType:"int32",javaType:"int",phpType:"integer",pythonType:"int",rubyType:"Bignum or Fixnum (as required)"},{protoType:"int64",notes:"Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",cppType:"int64",csType:"long",goType:"int64",javaType:"long",phpType:"integer/string",pythonType:"int/long",rubyType:"Bignum"},{protoType:"uint32",notes:"Uses variable-length encoding.",cppType:"uint32",csType:"uint",goType:"uint32",javaType:"int",phpType:"integer",pythonType:"int/long",rubyType:"Bignum or Fixnum (as required)"},{protoType:"uint64",notes:"Uses variable-length encoding.",cppType:"uint64",csType:"ulong",goType:"uint64",javaType:"long",phpType:"integer/string",pythonType:"int/long",rubyType:"Bignum or Fixnum (as required)"},{protoType:"sint32",notes:"Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",cppType:"int32",csType:"int",goType:"int32",javaType:"int",phpType:"integer",pythonType:"int",rubyType:"Bignum or Fixnum (as required)"},{protoType:"sint64",notes:"Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",cppType:"int64",csType:"long",goType:"int64",javaType:"long",phpType:"integer/string",pythonType:"int/long",rubyType:"Bignum"},{protoType:"fixed32",notes:"Always four bytes. More efficient than uint32 if values are often greater than 2^28.",cppType:"uint32",csType:"uint",goType:"uint32",javaType:"int",phpType:"integer",pythonType:"int",rubyType:"Bignum or Fixnum (as required)"},{protoType:"fixed64",notes:"Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",cppType:"uint64",csType:"ulong",goType:"uint64",javaType:"long",phpType:"integer/string",pythonType:"int/long",rubyType:"Bignum"},{protoType:"sfixed32",notes:"Always four bytes.",cppType:"int32",csType:"int",goType:"int32",javaType:"int",phpType:"integer",pythonType:"int",rubyType:"Bignum or Fixnum (as required)"},{protoType:"sfixed64",notes:"Always eight bytes.",cppType:"int64",csType:"long",goType:"int64",javaType:"long",phpType:"integer/string",pythonType:"int/long",rubyType:"Bignum"},{protoType:"bool",notes:"",cppType:"bool",csType:"bool",goType:"bool",javaType:"boolean",phpType:"boolean",pythonType:"boolean",rubyType:"TrueClass/FalseClass"},{protoType:"string",notes:"A string must always contain UTF-8 encoded or 7-bit ASCII text.",cppType:"string",csType:"string",goType:"string",javaType:"String",phpType:"string",pythonType:"str/unicode",rubyType:"String (UTF-8)"},{protoType:"bytes",notes:"May contain any arbitrary sequence of bytes.",cppType:"string",csType:"ByteString",goType:"[]byte",javaType:"ByteString",phpType:"string",pythonType:"str",rubyType:"String (ASCII-8BIT)"}]}}})],1)}),[],!1,null,null,null);t.default=i.exports}}]);